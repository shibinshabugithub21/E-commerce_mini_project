<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/cropper/2.3.4/cropper.min.css'>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      min-height: 100vh;
      background-color: #f4f4f4;
      align-items: center;
      text-align: center;
      overflow-x: hidden;
    }

    .side-nav {
      background-color: black;
      color: white;
      padding: 15px;
      text-align: left;
      width: 200px;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
      height: 100vh;
      position: fixed;
    }

    .side-nav ul {
      list-style: none;
      padding: 0;
      margin: 0;
      position: absolute;
      left: 45px;
      top: 120px;
    }

    .side-nav a {
      text-decoration: none;
      color: #fff;
      text-align: center;
      display: block;
      padding: 10px;
      margin-top: 40px;
      border-radius: 3px;
      border-radius: 20px;
      transition: 0.33s ease-in-out;
      font-weight: 500;
    }

    .side-nav a:hover {
      color: black;
      background-color: white;
      border-radius: 20px;
    }

    form {
      width: 1000px; /* Set width of the form */
      padding: 20px;
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      margin: 0 auto; /* Center the form horizontally */
      position: relative; /* Add relative positioning */
    }

    label {
      display: block;
      margin-bottom: 10px;
      font-weight: bold;
      text-align: left;
    }

    input[type="text"],
    input[type="number"],
    textarea,
    input[type="file"] {
      width: calc(100% - 22px);
      padding: 10px;
      margin-bottom: 15px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    button[type="submit"] {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button[type="submit"]:hover {
      background-color: #0056b3;
    }

    form {
      position: relative;
      left: 150px;
      /* top: 100px; */
    }
    #imagePreview img{
    height: 300px;
    max-width: 300px;
}

#cropper110Modal{
    position: absolute;
    width: 100vw;
    height: 100vh;
    background-color: rgba(53, 52, 52, 0.532);
    display: flex;
    justify-content: center;
    align-items: center;
    display: none;
}

#cropper110Modal img {
	max-width: 100%;
}

.cropper110-page {
	margin: 1em auto;
	max-width: 768px;
	height: 100%;
}

.cropper110-box {
	padding: 0.5em;
	width: calc(100%/2 - 1em);
    max-height: 60vh;
}



.cropper110-crop , .cropper110-close {
    padding: .5rem 1rem;
    background-color: rgb(0,0,0);
    color: #fff;
    font-weight: bold;
}

.cropper110-close{
    background-color: red;
}


      #imagePreviewContainer {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }
    
      .img-preview {
        max-width: 200px; /* Adjust the max-width as needed */
        max-height: 200px; /* Adjust the max-height as needed */
        border: 1px solid #ddd; /* Add a border for better visibility */
        margin-bottom: 10px;
        cursor: pointer; /* Add cursor pointer for better user interaction */
        transition: transform 0.3s ease-in-out; /* Add transition for smooth scaling */
      }
      
      .img-preview:hover {
        transform: scale(1.1); /* Scale up the image on hover */
      }

    .img-container {
        position: relative;
        display: inline-block;
    }

    .remove-btn {
        position: absolute;
        top: 0;
        right: 0;
        background-color: transparent;
        color: #fff; /* Set the color of the 'X' symbol */
        border: none;
        cursor: pointer;
        font-size: 20px;
    }

    .remove-btn:hover {
        color: #ff0000; /* Change the color on hover if desired */
    }
  </style>
</head>

<body>
  <div class="side-nav">
    <!-- <img src="/Public/img/bg.png" width="100px",height="150px"> -->
    <ul>
      <li><a href="/admin/home">Dashboard</a></li>
      <li><a href="/admin/user">User</a></li>
      <li><a href="/admin/category">Category</a></li>
      <li><a href="/admin/product">Product</a></li>
      <li><a href="/admin/order">Order</a></li>
      <li><a href="/admin/logout">logout</a></li>
      <!-- Add more navigation items as needed -->
    </ul>
  </div>
  <form action="/admin/addproduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
    <label for="productName">Product Name:</label>
    <input type="text" name="productName" required>
  
    <label for="category">Category:</label>
    <input type="text" name="category" required>
  
    <label for="stock">Stock:</label>
    <input type="number" name="stock" id="stock" required>
  
    <label for="price">Price:</label>
    <input type="number" name="price" id="price" required>
  
    <label for="rating">Rating:</label>
    <input type="number" name="rating" id="rating" required>
  
    <label for="description">Description:</label>
    <textarea name="description" rows="4" required></textarea>
  
    <label for="productImage">Product Images:</label>
    <input type="file" name="image" accept="image/*" multiple required onchange="previewImages(event)">
    <div id="preview"></div>
  
    <button type="submit">Add Product</button>
  </form>
 
  <script>
    function previewImages(event) {
      let previewDiv = document.getElementById('preview');
      previewDiv.innerHTML = "";

      const files = event.target.files;

      for (let i = 0; i < files.length; i++) {
        const image = URL.createObjectURL(files[i]);
        const newImage = document.createElement('img');
        newImage.src = image;
        newImage.width = "50";

        const deleteButton = document.createElement('button');
        deleteButton.innerHTML = 'Remove';
        deleteButton.onclick = function () {
          previewDiv.removeChild(imageContainer);
        };

        const imageContainer = document.createElement('div');
        imageContainer.appendChild(newImage);
        imageContainer.appendChild(deleteButton);

        previewDiv.appendChild(imageContainer);
      }
    }


    
  function validateForm() {
    var productName = document.getElementsByName("productName")[0].value.trim();
    var stock = document.getElementById("stock").value;
    var price = document.getElementById("price").value;
    var rating = document.getElementById("rating").value;

    // Check if the product name starts with a capital letter
    if (!productName.charAt(0).match(/[A-Z]/)) {
      alert("Product name must start with a capital letter.");
      return false;
    }

    // Check for leading or trailing spaces in the product name
    if (productName !== document.getElementsByName("productName")[0].value) {
      alert("Product name cannot have leading or trailing spaces.");
      return false;
    }

    // Check for negative values in stock, price, and rating
    if (stock < 0 || price < 0 || rating < 0) {
      alert("Stock, price, and rating cannot be negative.");
      return false;
    }

    return true;
  }

  function previewAndCropImages(event) {
      let previewDiv = document.getElementById('preview');
      previewDiv.innerHTML = "";

      const files = event.target.files;

      for (let i = 0; i < files.length; i++) {
        const image = URL.createObjectURL(files[i]);
        const newImage = document.createElement('img');
        newImage.src = image;
        newImage.width = "50";

        // Add Cropper.js functionality
        newImage.addEventListener('click', function() {
          const cropperModal = document.getElementById('cropperModal');
          cropperModal.style.display = 'flex';

          const cropperImage = document.getElementById('cropperImage');
          cropperImage.src = image;

          const cropper = new Cropper(cropperImage, {
            aspectRatio: 16 / 9,
            crop(event) {
              // Do something with the cropped image data, if needed
            },
          });

          // Handle close button click event
          document.getElementById('cropperClose').addEventListener('click', function() {
            cropper.destroy(); // Destroy Cropper instance
            cropperModal.style.display = 'none'; // Hide Cropper modal
          });
        });

        previewDiv.appendChild(newImage);
      }
    }


  </script>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.0/js/materialize.min.js"></script>
  <script src='https://cdnjs.cloudflare.com/ajax/libs/cropperjs/0.8.1/cropper.min.js'></script>
</body>
</html>
