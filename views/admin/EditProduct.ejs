<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      min-height: 100vh;
      background-color: #f4f4f4;
      align-items: center;
      text-align: center;
    }

    .side-nav {
      background-color: black;
      color: white;
      padding: 15px;
      text-align: left;
      width: 200px;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
      height: 1280px;
    }

    .side-nav ul {
      list-style: none;
      padding: 0;
      margin: 0;
      position: absolute;
      left: 45px;
      top: 120px;
    }

    .side-nav a {
      text-decoration: none;
      color: #fff;
      text-align: center;
      display: block;
      padding: 10px;
      margin-top: 40px;
      border-radius: 3px;
      border-radius: 20px;
      transition: 0.33s ease-in-out;
      font-weight: 500;
    }

    .side-nav a:hover {
      color: black;
      background-color: white;
      border-radius: 20px;
    }

    form {
      max-width: 1000px;
      width: 100%;
      padding: 20px;
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      margin: 40px;
      margin-bottom: 280px;
    }

    label {
      display: block;
      margin-bottom: 10px;
      font-weight: bold;
      text-align: left;
    }

    input[type="text"],
    input[type="number"],
    textarea,
    input[type="file"] {
      width: calc(100% - 22px);
      padding: 10px;
      margin-bottom: 15px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    button[type="submit"] {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button[type="submit"]:hover {
      background-color: #0056b3;
    }

    #preview {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
    }

    .image-container {
      position: relative;
      width: 30%;
      margin-bottom: 10px;
    }

    #preview img {
      /* width: 100%; */
      height: 100px;
      /* Set the desired height */
      object-fit: cover;
      border-radius: 5px;
    }

    .delete-button {
      position: absolute;
      top: 10px;
      right: 5px;
      background-color: #f0f0f0;
      color: black;
      border: none;
      border-radius: 5px solid black;
      padding: 5px;
      cursor: pointer;
    }
  </style>
</head>

<body>
  <div class="side-nav">
    <ul>
      <li><a href="/admin/home">Dashboard</a></li>
      <li><a href="/admin/user">User</a></li>
      <li><a href="/admin/category">Category</a></li>
      <li><a href="/admin/product">Product</a></li>
      <li><a href="/admin/order">Order</a></li>
      <li><a href="/admin/login">logout</a></li>
    </ul>
  </div>
  <form action="/admin/editproduct/<%= element._id%>" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
    <label for="productName">Product Name:</label>
    <input type="text" id="productName" name="productName" value="<%=element.Productname%>" required>

    <label for="category">Category:</label>
    <input type="text" id="category" name="category" value="<%=element.Category%>" required>

    <label for="stock">Stock:</label>
    <input type="number" id="stock" name="stock" value="<%=element.Stock%>" required>

    <label for="price">Price:</label>
    <input type="number" id="price" name="price" value="<%=element.Price%>" required>

    <label for="rating">Rating:</label>
    <input type="number" id="rating" name="rating" value="<%=element.Rating%>" required>

    <label for="description">Description:</label>
    <textarea id="description" name="description" rows="4" required><%=element.Description %></textarea>

    <label for="productImage">Product Image:</label>
    <input type="file" id="image" name="image" accept="image/*" multiple onchange="previewImages(event)">
    <div id="preview">
      <% element.Image.forEach((image, index) => { %>
      <div class="image-container">
        <img id="zoom-image-<%= element._id %>" class="card-img-top" src="/productImages/<%= image %>" />
        <div class="delete-button" onclick="deleteImage(this, '<%= image %>','<%= element._id %>')">delete</div>
      </div>
      <% }); %>
    </div>
    <p id="image-count">Image Count: 6</p>
    <button type="submit">Edit Product</button>
  </form>


  <script>
    function previewImages(event) {
      let previewDiv = document.getElementById('preview');
      previewDiv.innerHTML = "";

      const files = event.target.files;

      for (let i = 0; i < files.length; i++) {
        const image = URL.createObjectURL(files[i]);
        const newImage = document.createElement('img');
        newImage.src = image;

        const imageContainer = document.createElement('div');
        imageContainer.className = 'image-container';
        imageContainer.appendChild(newImage);

        previewDiv.appendChild(imageContainer);
      }

      updateImageCount();
    }

    function deleteImage(button, imageName,productId) {
      const imageContainer = button.parentNode;
      const previewDiv = document.getElementById('preview');
      previewDiv.removeChild(imageContainer);
      
      // Send request to the server to delete the image permanently
      fetch(`/admin/proImgEdite/${productId}`, {method:"post",
    headers:{
      "Content-Type":"application/json"
    },
    body: JSON.stringify({
      productId:productId,
      imgName:imageName,
    })
  })
      .then(response => {
        if (response.ok) {
          console.log('Image deleted successfully');
        } else {
          console.error('Failed to delete image');
        }
      })
      .catch(error => {
        console.error('Error deleting image:', error);
      });

      updateImageCount();
    }

    function updateImageCount() {
      const previewDiv = document.getElementById('preview');
      const imageCount = previewDiv.children.length;
      const countDisplay = document.getElementById('image-count');
      countDisplay.innerText = `Image Count: ${imageCount}`;
    }

    function validateForm() {
      // Get form fields
      var productName = document.getElementById('productName').value;
      var price = document.getElementById('price').value;
      var stock = document.getElementById('stock').value;
      var rating = document.getElementById('rating').value;

      // Product name validation (no space, starting capital letter)


      var productNameRegex = /^[a-zA-Z]+$/;
      if (!productNameRegex.test(productName).includes('')) {
        alert('Product name should contain no spaces and only letters.');
        return false;
      }
      // Price, stock, and rating validation (not negative)
      if (price < 0 || stock < 0 || rating < 0) {
        alert('Price, stock, and rating cannot be negative.');
        return false;
      }

      // If all validations pass, return true to submit the form
      return true;
    }
  </script>
</body>

</html>
